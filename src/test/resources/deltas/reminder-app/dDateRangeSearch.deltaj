delta dDateRangeSearch {
	modifies br.unb.cic.reminders.view.ReminderListFragment {
		modifies updateListViewFilter(String filterRemider) {
			ReminderFilter filter = new AllRemindersFilter(getActivity());
			ArrayList<Reminder> reminders = new ArrayList<Reminder>();
			for(Reminder item : filter.getReminderList()) {
				if(item.getText().contains(filterRemider)) {
					reminders.add(item);
				}
			}
			adapter = new ReminderArrayAdapter(getActivity().getApplicationContext(),
				reminders);
			ReminderArrayAdapter adapterLate, adapterToday, adapterNextDays;
			Reminder r = new Reminder();
			List<Reminder> remindersLate = new ArrayList<Reminder>();
			List<Reminder> remindersToday = new ArrayList<Reminder>();
			List<Reminder> remindersNextDays = new ArrayList<Reminder>();
			for(int i = 0;
				i < adapter.getCount();
				++ i) {
				r = adapter.getItem(i);
				if(r.getDateFinal() != null && r.getDateStart() != null) {
					String dayStart = r.getDateStart().substring(0, 2);
					String monthStart = r.getDateStart().substring(3, 5);
					String yearStart = r.getDateStart().substring(6, 10);
					String dayFinal = r.getDateFinal().substring(0, 2);
					String monthFinal = r.getDateFinal().substring(3, 5);
					String yearFinal = r.getDateFinal().substring(6, 10);
					Calendar cal = Calendar.getInstance();
					GregorianCalendar gc = new GregorianCalendar();
					GregorianCalendar gc2 = new GregorianCalendar();
					if(r.getHourFinal() != null) {
						String hour = r.getHourFinal().substring(0, 2);
						String min = r.getHourFinal().substring(3, 5);
						gc.set(Integer.parseInt(yearFinal), Integer.parseInt(monthFinal) - 1,
							Integer.parseInt(dayFinal), Integer.parseInt(hour),
							Integer.parseInt(min));
					}
					else {
						gc.set(Integer.parseInt(yearFinal), Integer.parseInt(monthFinal) - 1,
							Integer.parseInt(dayFinal));
					}
					if(r.getHourStart() != null) {
						String hour = r.getHourStart().substring(0, 2);
						String min = r.getHourStart().substring(3, 5);
						gc2.set(Integer.parseInt(yearStart), Integer.parseInt(monthStart) - 1,
							Integer.parseInt(dayStart), Integer.parseInt(hour),
							Integer.parseInt(min));
					}
					else {
						gc2.set(Integer.parseInt(yearStart), Integer.parseInt(monthStart) - 1,
							Integer.parseInt(dayStart));
					}
					if(gc.before(cal)) remindersLate.add(r);
					else if(gc.after(cal) && gc2.before(cal)) remindersToday.add(r);
					else remindersNextDays.add(r);
				}
			}
			adapterLate = new
			ReminderArrayAdapter(getActivity().getApplicationContext(), remindersLate,
				Color.rgb(0xED, 0x1C, 0x24), ReminderArrayAdapter.LATE);
			adapterToday = new
			ReminderArrayAdapter(getActivity().getApplicationContext(), remindersToday,
				Color.rgb(0x33, 0xB5, 0xE5), ReminderArrayAdapter.TODAY);
			adapterNextDays = new
			ReminderArrayAdapter(getActivity().getApplicationContext(),
				remindersNextDays, Color.rgb(0x99, 0x99, 0x99),
				ReminderArrayAdapter.NEXT_DAYS);
			lvReminderLate.setAdapter(adapterLate);
			Utility.setListViewHeightBasedOnChildren(lvReminderLate);
			lvReminderToday.setAdapter(adapterToday);
			Utility.setListViewHeightBasedOnChildren(lvReminderToday);
			lvReminderNextDays.setAdapter(adapterNextDays);
			Utility.setListViewHeightBasedOnChildren(lvReminderNextDays);
		}
	}
}